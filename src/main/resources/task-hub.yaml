openapi: 3.0.3
info:
  title: Spring Task Hub API
  description: Microservice for task assignment and tracking.
  version: 1.0.0
  contact:
    name: Chesterford
    email: yousseffehaab@gmail.com

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /tasks:
    get:
      operationId: getTasks
      summary: Get all tasks
      tags: [Tasks]
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

    post:
      operationId: createTask
      summary: Create a new task
      tags: [Tasks]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequest'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{taskId}:
    get:
      operationId: getTaskById
      summary: Get a task by ID
      tags: [Tasks]
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found

    put:
      operationId: updateTaskById
      summary: Update a task status
      tags: [Tasks]
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateRequest'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found

    delete:
      operationId: deleteTaskById
      summary: Delete a task
      tags: [Tasks]
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found

components:
  schemas:

    StatusEnum:
      type: string
      enum: [PENDING, IN_PROGRESS, COMPLETED]

    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        assignedTo:
          type: string
        dueDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TaskCreateRequest:
      type: object
      required: [title, description, assignedTo, dueDate]
      properties:
        title:
          type: string
        description:
          type: string
        assignedTo:
          type: string
        dueDate:
          type: string
          format: date-time

    TaskUpdateRequest:
      type: object
      required: [status]
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
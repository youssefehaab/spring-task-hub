/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.11.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.chesterford.task.hub.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.constraints.*;
import javax.validation.Valid;

import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

import com.chesterford.task.hub.dto.TaskCreateRequestDto;import com.chesterford.task.hub.dto.TaskDto;import com.chesterford.task.hub.dto.TaskUpdateRequestDto;import java.util.UUID;

@Generated(value = "com.chesterford.FastSpringCodegen", date = "2025-06-26T21:18:37.398383+08:00[Asia/Kuala_Lumpur]", comments = "Generator version: 7.11.0")
@Controller
@RestController
@RequiredArgsConstructor
@RequestMapping("${openapi.springTaskHub.base-path:}")
public class TasksApiController implements TasksApi {

  private final TasksApiService service;

  @Override
  public ResponseEntity<TaskDto> createTask(TaskCreateRequestDto taskCreateRequestDto) {
    return ResponseEntity.status(201).body(service.createTask(taskCreateRequestDto));
  }

  @Override
  public ResponseEntity<Void> deleteTaskById(UUID taskId) {
    return ResponseEntity.status(204).body(service.deleteTaskById(taskId));
  }

  @Override
  public ResponseEntity<TaskDto> getTaskById(UUID taskId) {
    return ResponseEntity.status(200).body(service.getTaskById(taskId));
  }

  @Override
  public ResponseEntity<List<TaskDto>> getTasks() {
    return ResponseEntity.status(200).body(service.getTasks());
  }

  @Override
  public ResponseEntity<TaskDto> updateTaskById(UUID taskId, TaskUpdateRequestDto taskUpdateRequestDto) {
    return ResponseEntity.status(200).body(service.updateTaskById(taskId, taskUpdateRequestDto));
  }

}
